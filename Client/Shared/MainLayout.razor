@using Viewer.Shared.Users
@inherits LayoutComponentBase
@inject IAuthClient Auth
@inject NavigationManager Nav
@inject IImageClient Client

<MudThemeProvider IsDarkMode="true"/>
<MudDialogProvider
    Position="DialogPosition.Center"
    CloseButton="true"
    MaxWidth="MaxWidth.ExtraLarge"
    CloseOnEscapeKey="true"
    />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar>
        <MudButton Class="mr-3" EndIcon="@Icons.Material.Filled.Home"
                   Color="Color.Inherit"
                   @onclick="@ToHome">
            Home
        </MudButton>
        <MudButton Class="mx-3" EndIcon="@Icons.Material.Filled.AppRegistration"
                   Color="Color.Inherit"
                   @onclick="@ToRegistration">
            Register
        </MudButton>
        <AuthorizeView>
            <Authorized>
                @if (_canUpload)
                {
                    <MudButton Class="mx-3" EndIcon="@Icons.Material.Filled.UploadFile"
                               Color="Color.Inherit"
                               @onclick="@ToUpload">
                        Upload
                    </MudButton>
                }
            </Authorized>
        </AuthorizeView>
        <MudButton Class="mx-3" EndIcon="@Icons.Material.Filled.Face"
                   Color="Color.Inherit"
                   @onclick="@ToFriends">
            Friends
        </MudButton>
        <MudSpacer/>
        <MudText Typo="Typo.h6">Family photos</MudText>
        <MudSpacer/>
        <AuthorizeView>
            <Authorized>
                <MudButton Class="mx-3" EndIcon="@Icons.Material.Filled.Logout"
                           Color="Color.Inherit"
                           @onclick="@Auth.SignOut">
                    Logout
                </MudButton>
            </Authorized>
            <Authorizing>
                <MudProgressLinear Size="Size.Small" Indeterminate="true"/>
            </Authorizing>
            <NotAuthorized>
                <MudButton Class="mx-3" EndIcon="@Icons.Material.Filled.Login"
                               Color="Color.Inherit"
                               @onclick="@ToLogin">
                    Login
                </MudButton>
            </NotAuthorized>
        </AuthorizeView>
        <MudButton Class="ml-3" EndIcon="@Icons.Material.Filled.ShoppingCart"
                   Color="Color.Inherit"
                   @onclick="@ToggleCart">
            Cart
        </MudButton>
    </MudAppBar>
    

@* Cart drawer *@
<MudDrawer @bind-Open="@_cartOpen" Anchor="Anchor.Right" ClipMode="DrawerClipMode.Docked" Variant="DrawerVariant.Persistent" Width="35em">
    <CartView DownloadCallback="Download" />
</MudDrawer>
    
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.False">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    protected override async Task OnInitializedAsync()
    {
        _me = await Auth.WhoAmI().ConfigureAwait(false);
        _canUpload = _me?.Roles.Contains(Roles.Upload) ?? false;
    }

    private bool _cartOpen = true;
    private bool _canUpload;
    private UserDto? _me;

    private void ToggleCart() => _cartOpen = !_cartOpen;
    private void ToHome() => Nav.NavigateTo(Routes.Home);
    private void ToLogin() => Nav.NavigateTo(Routes.Login);
    private void ToRegistration() => Nav.NavigateTo(Routes.Register);
    private void ToUpload() => Nav.NavigateTo(Routes.Upload);
    private void ToFriends() => Nav.NavigateTo(Routes.Friends);
    
    private async Task? Download(Cart arg)
    {
        var req = new DownloadImagesRequest()
        {
            Images = arg.Images.Select(i => i.Id)
        };
        await Client.Download(req);
    }
}
